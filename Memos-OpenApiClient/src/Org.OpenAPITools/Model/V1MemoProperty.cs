/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// V1MemoProperty
    /// </summary>
    [DataContract(Name = "v1MemoProperty")]
    public partial class V1MemoProperty : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1MemoProperty" /> class.
        /// </summary>
        /// <param name="tags">tags.</param>
        /// <param name="hasLink">hasLink.</param>
        /// <param name="hasTaskList">hasTaskList.</param>
        /// <param name="hasCode">hasCode.</param>
        public V1MemoProperty(List<string> tags = default(List<string>), bool hasLink = default(bool), bool hasTaskList = default(bool), bool hasCode = default(bool))
        {
            this.Tags = tags;
            this.HasLink = hasLink;
            this.HasTaskList = hasTaskList;
            this.HasCode = hasCode;
        }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = false)]
        public List<string> Tags { get; set; }

        /// <summary>
        /// Gets or Sets HasLink
        /// </summary>
        [DataMember(Name = "hasLink", EmitDefaultValue = true)]
        public bool HasLink { get; set; }

        /// <summary>
        /// Gets or Sets HasTaskList
        /// </summary>
        [DataMember(Name = "hasTaskList", EmitDefaultValue = true)]
        public bool HasTaskList { get; set; }

        /// <summary>
        /// Gets or Sets HasCode
        /// </summary>
        [DataMember(Name = "hasCode", EmitDefaultValue = true)]
        public bool HasCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class V1MemoProperty {\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  HasLink: ").Append(HasLink).Append("\n");
            sb.Append("  HasTaskList: ").Append(HasTaskList).Append("\n");
            sb.Append("  HasCode: ").Append(HasCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
