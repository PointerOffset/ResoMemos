/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WebhookServiceUpdateWebhookRequest
    /// </summary>
    [DataContract(Name = "WebhookService_UpdateWebhook_request")]
    public partial class WebhookServiceUpdateWebhookRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets RowStatus
        /// </summary>
        [DataMember(Name = "rowStatus", EmitDefaultValue = false)]
        public V1RowStatus? RowStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookServiceUpdateWebhookRequest" /> class.
        /// </summary>
        /// <param name="creatorId">creatorId.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="updatedTime">updatedTime.</param>
        /// <param name="rowStatus">rowStatus.</param>
        /// <param name="name">name.</param>
        /// <param name="url">url.</param>
        public WebhookServiceUpdateWebhookRequest(int creatorId = default(int), DateTime createdTime = default(DateTime), DateTime updatedTime = default(DateTime), V1RowStatus? rowStatus = default(V1RowStatus?), string name = default(string), string url = default(string))
        {
            this.CreatorId = creatorId;
            this.CreatedTime = createdTime;
            this.UpdatedTime = updatedTime;
            this.RowStatus = rowStatus;
            this.Name = name;
            this.Url = url;
        }

        /// <summary>
        /// Gets or Sets CreatorId
        /// </summary>
        [DataMember(Name = "creatorId", EmitDefaultValue = false)]
        public int CreatorId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name = "createdTime", EmitDefaultValue = false)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedTime
        /// </summary>
        [DataMember(Name = "updatedTime", EmitDefaultValue = false)]
        public DateTime UpdatedTime { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhookServiceUpdateWebhookRequest {\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  UpdatedTime: ").Append(UpdatedTime).Append("\n");
            sb.Append("  RowStatus: ").Append(RowStatus).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
