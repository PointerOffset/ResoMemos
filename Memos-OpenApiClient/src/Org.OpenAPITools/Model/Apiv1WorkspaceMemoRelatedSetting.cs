/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Apiv1WorkspaceMemoRelatedSetting
    /// </summary>
    [DataContract(Name = "apiv1WorkspaceMemoRelatedSetting")]
    public partial class Apiv1WorkspaceMemoRelatedSetting : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Apiv1WorkspaceMemoRelatedSetting" /> class.
        /// </summary>
        /// <param name="disallowPublicVisible">disallow_public_share disallows set memo as public visible..</param>
        /// <param name="displayWithUpdateTime">display_with_update_time orders and displays memo with update time..</param>
        /// <param name="contentLengthLimit">content_length_limit is the limit of content length. Unit is byte..</param>
        /// <param name="enableAutoCompact">enable_auto_compact enables auto compact for large content..</param>
        /// <param name="enableDoubleClickEdit">enable_double_click_edit enables editing on double click..</param>
        public Apiv1WorkspaceMemoRelatedSetting(bool disallowPublicVisible = default(bool), bool displayWithUpdateTime = default(bool), int contentLengthLimit = default(int), bool enableAutoCompact = default(bool), bool enableDoubleClickEdit = default(bool))
        {
            this.DisallowPublicVisible = disallowPublicVisible;
            this.DisplayWithUpdateTime = displayWithUpdateTime;
            this.ContentLengthLimit = contentLengthLimit;
            this.EnableAutoCompact = enableAutoCompact;
            this.EnableDoubleClickEdit = enableDoubleClickEdit;
        }

        /// <summary>
        /// disallow_public_share disallows set memo as public visible.
        /// </summary>
        /// <value>disallow_public_share disallows set memo as public visible.</value>
        [DataMember(Name = "disallowPublicVisible", EmitDefaultValue = true)]
        public bool DisallowPublicVisible { get; set; }

        /// <summary>
        /// display_with_update_time orders and displays memo with update time.
        /// </summary>
        /// <value>display_with_update_time orders and displays memo with update time.</value>
        [DataMember(Name = "displayWithUpdateTime", EmitDefaultValue = true)]
        public bool DisplayWithUpdateTime { get; set; }

        /// <summary>
        /// content_length_limit is the limit of content length. Unit is byte.
        /// </summary>
        /// <value>content_length_limit is the limit of content length. Unit is byte.</value>
        [DataMember(Name = "contentLengthLimit", EmitDefaultValue = false)]
        public int ContentLengthLimit { get; set; }

        /// <summary>
        /// enable_auto_compact enables auto compact for large content.
        /// </summary>
        /// <value>enable_auto_compact enables auto compact for large content.</value>
        [DataMember(Name = "enableAutoCompact", EmitDefaultValue = true)]
        public bool EnableAutoCompact { get; set; }

        /// <summary>
        /// enable_double_click_edit enables editing on double click.
        /// </summary>
        /// <value>enable_double_click_edit enables editing on double click.</value>
        [DataMember(Name = "enableDoubleClickEdit", EmitDefaultValue = true)]
        public bool EnableDoubleClickEdit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Apiv1WorkspaceMemoRelatedSetting {\n");
            sb.Append("  DisallowPublicVisible: ").Append(DisallowPublicVisible).Append("\n");
            sb.Append("  DisplayWithUpdateTime: ").Append(DisplayWithUpdateTime).Append("\n");
            sb.Append("  ContentLengthLimit: ").Append(ContentLengthLimit).Append("\n");
            sb.Append("  EnableAutoCompact: ").Append(EnableAutoCompact).Append("\n");
            sb.Append("  EnableDoubleClickEdit: ").Append(EnableDoubleClickEdit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
