/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// V1Activity
    /// </summary>
    [DataContract(Name = "v1Activity")]
    public partial class V1Activity : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1Activity" /> class.
        /// </summary>
        /// <param name="id">The system-generated unique identifier for the activity..</param>
        /// <param name="creatorId">The system-generated unique identifier for the user who created the activity..</param>
        /// <param name="type">The type of the activity..</param>
        /// <param name="level">The level of the activity..</param>
        /// <param name="payload">payload.</param>
        public V1Activity(int id = default(int), int creatorId = default(int), string type = default(string), string level = default(string), Apiv1ActivityPayload payload = default(Apiv1ActivityPayload))
        {
            this.Id = id;
            this.CreatorId = creatorId;
            this.Type = type;
            this.Level = level;
            this.Payload = payload;
        }

        /// <summary>
        /// The system-generated unique identifier for the activity.
        /// </summary>
        /// <value>The system-generated unique identifier for the activity.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The system-generated unique identifier for the user who created the activity.
        /// </summary>
        /// <value>The system-generated unique identifier for the user who created the activity.</value>
        [DataMember(Name = "creatorId", EmitDefaultValue = false)]
        public int CreatorId { get; set; }

        /// <summary>
        /// The type of the activity.
        /// </summary>
        /// <value>The type of the activity.</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// The level of the activity.
        /// </summary>
        /// <value>The level of the activity.</value>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public string Level { get; set; }

        /// <summary>
        /// The create time of the activity.
        /// </summary>
        /// <value>The create time of the activity.</value>
        [DataMember(Name = "createTime", EmitDefaultValue = false)]
        public DateTime CreateTime { get; private set; }

        /// <summary>
        /// Returns false as CreateTime should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreateTime()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Payload
        /// </summary>
        [DataMember(Name = "payload", EmitDefaultValue = false)]
        public Apiv1ActivityPayload Payload { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class V1Activity {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
