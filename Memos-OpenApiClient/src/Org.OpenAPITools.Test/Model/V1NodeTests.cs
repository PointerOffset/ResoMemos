/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing V1Node
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class V1NodeTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for V1Node
        //private V1Node instance;

        public V1NodeTests()
        {
            // TODO uncomment below to create an instance of V1Node
            //instance = new V1Node();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of V1Node
        /// </summary>
        [Fact]
        public void V1NodeInstanceTest()
        {
            // TODO uncomment below to test "IsType" V1Node
            //Assert.IsType<V1Node>(instance);
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'LineBreakNode'
        /// </summary>
        [Fact]
        public void LineBreakNodeTest()
        {
            // TODO unit test for the property 'LineBreakNode'
        }

        /// <summary>
        /// Test the property 'ParagraphNode'
        /// </summary>
        [Fact]
        public void ParagraphNodeTest()
        {
            // TODO unit test for the property 'ParagraphNode'
        }

        /// <summary>
        /// Test the property 'CodeBlockNode'
        /// </summary>
        [Fact]
        public void CodeBlockNodeTest()
        {
            // TODO unit test for the property 'CodeBlockNode'
        }

        /// <summary>
        /// Test the property 'HeadingNode'
        /// </summary>
        [Fact]
        public void HeadingNodeTest()
        {
            // TODO unit test for the property 'HeadingNode'
        }

        /// <summary>
        /// Test the property 'HorizontalRuleNode'
        /// </summary>
        [Fact]
        public void HorizontalRuleNodeTest()
        {
            // TODO unit test for the property 'HorizontalRuleNode'
        }

        /// <summary>
        /// Test the property 'BlockquoteNode'
        /// </summary>
        [Fact]
        public void BlockquoteNodeTest()
        {
            // TODO unit test for the property 'BlockquoteNode'
        }

        /// <summary>
        /// Test the property 'OrderedListNode'
        /// </summary>
        [Fact]
        public void OrderedListNodeTest()
        {
            // TODO unit test for the property 'OrderedListNode'
        }

        /// <summary>
        /// Test the property 'UnorderedListNode'
        /// </summary>
        [Fact]
        public void UnorderedListNodeTest()
        {
            // TODO unit test for the property 'UnorderedListNode'
        }

        /// <summary>
        /// Test the property 'TaskListNode'
        /// </summary>
        [Fact]
        public void TaskListNodeTest()
        {
            // TODO unit test for the property 'TaskListNode'
        }

        /// <summary>
        /// Test the property 'MathBlockNode'
        /// </summary>
        [Fact]
        public void MathBlockNodeTest()
        {
            // TODO unit test for the property 'MathBlockNode'
        }

        /// <summary>
        /// Test the property 'TableNode'
        /// </summary>
        [Fact]
        public void TableNodeTest()
        {
            // TODO unit test for the property 'TableNode'
        }

        /// <summary>
        /// Test the property 'EmbeddedContentNode'
        /// </summary>
        [Fact]
        public void EmbeddedContentNodeTest()
        {
            // TODO unit test for the property 'EmbeddedContentNode'
        }

        /// <summary>
        /// Test the property 'TextNode'
        /// </summary>
        [Fact]
        public void TextNodeTest()
        {
            // TODO unit test for the property 'TextNode'
        }

        /// <summary>
        /// Test the property 'BoldNode'
        /// </summary>
        [Fact]
        public void BoldNodeTest()
        {
            // TODO unit test for the property 'BoldNode'
        }

        /// <summary>
        /// Test the property 'ItalicNode'
        /// </summary>
        [Fact]
        public void ItalicNodeTest()
        {
            // TODO unit test for the property 'ItalicNode'
        }

        /// <summary>
        /// Test the property 'BoldItalicNode'
        /// </summary>
        [Fact]
        public void BoldItalicNodeTest()
        {
            // TODO unit test for the property 'BoldItalicNode'
        }

        /// <summary>
        /// Test the property 'CodeNode'
        /// </summary>
        [Fact]
        public void CodeNodeTest()
        {
            // TODO unit test for the property 'CodeNode'
        }

        /// <summary>
        /// Test the property 'ImageNode'
        /// </summary>
        [Fact]
        public void ImageNodeTest()
        {
            // TODO unit test for the property 'ImageNode'
        }

        /// <summary>
        /// Test the property 'LinkNode'
        /// </summary>
        [Fact]
        public void LinkNodeTest()
        {
            // TODO unit test for the property 'LinkNode'
        }

        /// <summary>
        /// Test the property 'AutoLinkNode'
        /// </summary>
        [Fact]
        public void AutoLinkNodeTest()
        {
            // TODO unit test for the property 'AutoLinkNode'
        }

        /// <summary>
        /// Test the property 'TagNode'
        /// </summary>
        [Fact]
        public void TagNodeTest()
        {
            // TODO unit test for the property 'TagNode'
        }

        /// <summary>
        /// Test the property 'StrikethroughNode'
        /// </summary>
        [Fact]
        public void StrikethroughNodeTest()
        {
            // TODO unit test for the property 'StrikethroughNode'
        }

        /// <summary>
        /// Test the property 'EscapingCharacterNode'
        /// </summary>
        [Fact]
        public void EscapingCharacterNodeTest()
        {
            // TODO unit test for the property 'EscapingCharacterNode'
        }

        /// <summary>
        /// Test the property 'MathNode'
        /// </summary>
        [Fact]
        public void MathNodeTest()
        {
            // TODO unit test for the property 'MathNode'
        }

        /// <summary>
        /// Test the property 'HighlightNode'
        /// </summary>
        [Fact]
        public void HighlightNodeTest()
        {
            // TODO unit test for the property 'HighlightNode'
        }

        /// <summary>
        /// Test the property 'SubscriptNode'
        /// </summary>
        [Fact]
        public void SubscriptNodeTest()
        {
            // TODO unit test for the property 'SubscriptNode'
        }

        /// <summary>
        /// Test the property 'SuperscriptNode'
        /// </summary>
        [Fact]
        public void SuperscriptNodeTest()
        {
            // TODO unit test for the property 'SuperscriptNode'
        }

        /// <summary>
        /// Test the property 'ReferencedContentNode'
        /// </summary>
        [Fact]
        public void ReferencedContentNodeTest()
        {
            // TODO unit test for the property 'ReferencedContentNode'
        }

        /// <summary>
        /// Test the property 'SpoilerNode'
        /// </summary>
        [Fact]
        public void SpoilerNodeTest()
        {
            // TODO unit test for the property 'SpoilerNode'
        }
    }
}
