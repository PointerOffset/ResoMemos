/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AuthServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthServiceApiTests : IDisposable
    {
        private AuthServiceApi instance;

        public AuthServiceApiTests()
        {
            instance = new AuthServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthServiceApi
            //Assert.IsType<AuthServiceApi>(instance);
        }

        /// <summary>
        /// Test AuthServiceGetAuthStatus
        /// </summary>
        [Fact]
        public void AuthServiceGetAuthStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AuthServiceGetAuthStatus();
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test AuthServiceSignIn
        /// </summary>
        [Fact]
        public void AuthServiceSignInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? username = null;
            //string? password = null;
            //bool? neverExpire = null;
            //var response = instance.AuthServiceSignIn(username, password, neverExpire);
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test AuthServiceSignInWithSSO
        /// </summary>
        [Fact]
        public void AuthServiceSignInWithSSOTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? idpId = null;
            //string? code = null;
            //string? redirectUri = null;
            //var response = instance.AuthServiceSignInWithSSO(idpId, code, redirectUri);
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test AuthServiceSignOut
        /// </summary>
        [Fact]
        public void AuthServiceSignOutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AuthServiceSignOut();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test AuthServiceSignUp
        /// </summary>
        [Fact]
        public void AuthServiceSignUpTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? username = null;
            //string? password = null;
            //var response = instance.AuthServiceSignUp(username, password);
            //Assert.IsType<V1User>(response);
        }
    }
}
