/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing MemoServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MemoServiceApiTests : IDisposable
    {
        private MemoServiceApi instance;

        public MemoServiceApiTests()
        {
            instance = new MemoServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MemoServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MemoServiceApi
            //Assert.IsType<MemoServiceApi>(instance);
        }

        /// <summary>
        /// Test MemoServiceCreateMemo
        /// </summary>
        [Fact]
        public void MemoServiceCreateMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1CreateMemoRequest body = null;
            //var response = instance.MemoServiceCreateMemo(body);
            //Assert.IsType<V1Memo>(response);
        }

        /// <summary>
        /// Test MemoServiceCreateMemoComment
        /// </summary>
        [Fact]
        public void MemoServiceCreateMemoCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //V1CreateMemoRequest comment = null;
            //var response = instance.MemoServiceCreateMemoComment(name, comment);
            //Assert.IsType<V1Memo>(response);
        }

        /// <summary>
        /// Test MemoServiceDeleteMemo
        /// </summary>
        [Fact]
        public void MemoServiceDeleteMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name4 = null;
            //var response = instance.MemoServiceDeleteMemo(name4);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceDeleteMemoReaction
        /// </summary>
        [Fact]
        public void MemoServiceDeleteMemoReactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int reactionId = null;
            //var response = instance.MemoServiceDeleteMemoReaction(reactionId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceDeleteMemoTag
        /// </summary>
        [Fact]
        public void MemoServiceDeleteMemoTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parent = null;
            //string tag = null;
            //bool? deleteRelatedMemos = null;
            //var response = instance.MemoServiceDeleteMemoTag(parent, tag, deleteRelatedMemos);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceExportMemos
        /// </summary>
        [Fact]
        public void MemoServiceExportMemosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1ExportMemosRequest body = null;
            //var response = instance.MemoServiceExportMemos(body);
            //Assert.IsType<V1ExportMemosResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceGetMemo
        /// </summary>
        [Fact]
        public void MemoServiceGetMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name3 = null;
            //var response = instance.MemoServiceGetMemo(name3);
            //Assert.IsType<V1Memo>(response);
        }

        /// <summary>
        /// Test MemoServiceGetUserMemosStats
        /// </summary>
        [Fact]
        public void MemoServiceGetUserMemosStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? name = null;
            //string? timezone = null;
            //string? filter = null;
            //var response = instance.MemoServiceGetUserMemosStats(name, timezone, filter);
            //Assert.IsType<V1GetUserMemosStatsResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoComments
        /// </summary>
        [Fact]
        public void MemoServiceListMemoCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.MemoServiceListMemoComments(name);
            //Assert.IsType<V1ListMemoCommentsResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoProperties
        /// </summary>
        [Fact]
        public void MemoServiceListMemoPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.MemoServiceListMemoProperties(name);
            //Assert.IsType<V1ListMemoPropertiesResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoReactions
        /// </summary>
        [Fact]
        public void MemoServiceListMemoReactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.MemoServiceListMemoReactions(name);
            //Assert.IsType<V1ListMemoReactionsResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoRelations
        /// </summary>
        [Fact]
        public void MemoServiceListMemoRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.MemoServiceListMemoRelations(name);
            //Assert.IsType<V1ListMemoRelationsResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoResources
        /// </summary>
        [Fact]
        public void MemoServiceListMemoResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.MemoServiceListMemoResources(name);
            //Assert.IsType<V1ListMemoResourcesResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemoTags
        /// </summary>
        [Fact]
        public void MemoServiceListMemoTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parent = null;
            //string? filter = null;
            //var response = instance.MemoServiceListMemoTags(parent, filter);
            //Assert.IsType<V1ListMemoTagsResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceListMemos
        /// </summary>
        [Fact]
        public void MemoServiceListMemosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //string? pageToken = null;
            //string? filter = null;
            //var response = instance.MemoServiceListMemos(pageSize, pageToken, filter);
            //Assert.IsType<V1ListMemosResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceRebuildMemoProperty
        /// </summary>
        [Fact]
        public void MemoServiceRebuildMemoPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //Object body = null;
            //var response = instance.MemoServiceRebuildMemoProperty(name, body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceRenameMemoTag
        /// </summary>
        [Fact]
        public void MemoServiceRenameMemoTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parent = null;
            //MemoServiceRenameMemoTagBody body = null;
            //var response = instance.MemoServiceRenameMemoTag(parent, body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceSearchMemos
        /// </summary>
        [Fact]
        public void MemoServiceSearchMemosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? filter = null;
            //var response = instance.MemoServiceSearchMemos(filter);
            //Assert.IsType<V1SearchMemosResponse>(response);
        }

        /// <summary>
        /// Test MemoServiceSetMemoRelations
        /// </summary>
        [Fact]
        public void MemoServiceSetMemoRelationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //MemoServiceSetMemoRelationsBody body = null;
            //var response = instance.MemoServiceSetMemoRelations(name, body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceSetMemoResources
        /// </summary>
        [Fact]
        public void MemoServiceSetMemoResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //MemoServiceSetMemoResourcesBody body = null;
            //var response = instance.MemoServiceSetMemoResources(name, body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test MemoServiceUpdateMemo
        /// </summary>
        [Fact]
        public void MemoServiceUpdateMemoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memoName = null;
            //MemoServiceUpdateMemoRequest memo = null;
            //var response = instance.MemoServiceUpdateMemo(memoName, memo);
            //Assert.IsType<V1Memo>(response);
        }

        /// <summary>
        /// Test MemoServiceUpsertMemoReaction
        /// </summary>
        [Fact]
        public void MemoServiceUpsertMemoReactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //MemoServiceUpsertMemoReactionBody body = null;
            //var response = instance.MemoServiceUpsertMemoReaction(name, body);
            //Assert.IsType<V1Reaction>(response);
        }
    }
}
