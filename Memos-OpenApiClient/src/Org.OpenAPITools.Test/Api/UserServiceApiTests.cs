/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing UserServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserServiceApiTests : IDisposable
    {
        private UserServiceApi instance;

        public UserServiceApiTests()
        {
            instance = new UserServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserServiceApi
            //Assert.IsType<UserServiceApi>(instance);
        }

        /// <summary>
        /// Test UserServiceCreateUser
        /// </summary>
        [Fact]
        public void UserServiceCreateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1User user = null;
            //var response = instance.UserServiceCreateUser(user);
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test UserServiceCreateUserAccessToken
        /// </summary>
        [Fact]
        public void UserServiceCreateUserAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //UserServiceCreateUserAccessTokenBody body = null;
            //var response = instance.UserServiceCreateUserAccessToken(name, body);
            //Assert.IsType<V1UserAccessToken>(response);
        }

        /// <summary>
        /// Test UserServiceDeleteUser
        /// </summary>
        [Fact]
        public void UserServiceDeleteUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.UserServiceDeleteUser(name);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserServiceDeleteUserAccessToken
        /// </summary>
        [Fact]
        public void UserServiceDeleteUserAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string accessToken = null;
            //var response = instance.UserServiceDeleteUserAccessToken(name, accessToken);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserServiceGetUser
        /// </summary>
        [Fact]
        public void UserServiceGetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.UserServiceGetUser(name);
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test UserServiceGetUserAvatarBinary
        /// </summary>
        [Fact]
        public void UserServiceGetUserAvatarBinaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string? httpBodyContentType = null;
            //byte[]? httpBodyData = null;
            //var response = instance.UserServiceGetUserAvatarBinary(name, httpBodyContentType, httpBodyData);
            //Assert.IsType<ApiHttpBody>(response);
        }

        /// <summary>
        /// Test UserServiceGetUserSetting
        /// </summary>
        [Fact]
        public void UserServiceGetUserSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.UserServiceGetUserSetting(name);
            //Assert.IsType<Apiv1UserSetting>(response);
        }

        /// <summary>
        /// Test UserServiceListUserAccessTokens
        /// </summary>
        [Fact]
        public void UserServiceListUserAccessTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.UserServiceListUserAccessTokens(name);
            //Assert.IsType<V1ListUserAccessTokensResponse>(response);
        }

        /// <summary>
        /// Test UserServiceListUsers
        /// </summary>
        [Fact]
        public void UserServiceListUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserServiceListUsers();
            //Assert.IsType<V1ListUsersResponse>(response);
        }

        /// <summary>
        /// Test UserServiceSearchUsers
        /// </summary>
        [Fact]
        public void UserServiceSearchUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? filter = null;
            //var response = instance.UserServiceSearchUsers(filter);
            //Assert.IsType<V1SearchUsersResponse>(response);
        }

        /// <summary>
        /// Test UserServiceUpdateUser
        /// </summary>
        [Fact]
        public void UserServiceUpdateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userName = null;
            //UserServiceUpdateUserRequest user = null;
            //var response = instance.UserServiceUpdateUser(userName, user);
            //Assert.IsType<V1User>(response);
        }

        /// <summary>
        /// Test UserServiceUpdateUserSetting
        /// </summary>
        [Fact]
        public void UserServiceUpdateUserSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string settingName = null;
            //UserServiceUpdateUserSettingRequest setting = null;
            //var response = instance.UserServiceUpdateUserSetting(settingName, setting);
            //Assert.IsType<Apiv1UserSetting>(response);
        }
    }
}
