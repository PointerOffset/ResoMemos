/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ResourceServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ResourceServiceApiTests : IDisposable
    {
        private ResourceServiceApi instance;

        public ResourceServiceApiTests()
        {
            instance = new ResourceServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ResourceServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ResourceServiceApi
            //Assert.IsType<ResourceServiceApi>(instance);
        }

        /// <summary>
        /// Test ResourceServiceCreateResource
        /// </summary>
        [Fact]
        public void ResourceServiceCreateResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1Resource resource = null;
            //var response = instance.ResourceServiceCreateResource(resource);
            //Assert.IsType<V1Resource>(response);
        }

        /// <summary>
        /// Test ResourceServiceDeleteResource
        /// </summary>
        [Fact]
        public void ResourceServiceDeleteResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name3 = null;
            //var response = instance.ResourceServiceDeleteResource(name3);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ResourceServiceGetResource
        /// </summary>
        [Fact]
        public void ResourceServiceGetResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name2 = null;
            //var response = instance.ResourceServiceGetResource(name2);
            //Assert.IsType<V1Resource>(response);
        }

        /// <summary>
        /// Test ResourceServiceGetResourceBinary
        /// </summary>
        [Fact]
        public void ResourceServiceGetResourceBinaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string filename = null;
            //var response = instance.ResourceServiceGetResourceBinary(name, filename);
            //Assert.IsType<ApiHttpBody>(response);
        }

        /// <summary>
        /// Test ResourceServiceListResources
        /// </summary>
        [Fact]
        public void ResourceServiceListResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ResourceServiceListResources();
            //Assert.IsType<V1ListResourcesResponse>(response);
        }

        /// <summary>
        /// Test ResourceServiceSearchResources
        /// </summary>
        [Fact]
        public void ResourceServiceSearchResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? filter = null;
            //var response = instance.ResourceServiceSearchResources(filter);
            //Assert.IsType<V1SearchResourcesResponse>(response);
        }

        /// <summary>
        /// Test ResourceServiceUpdateResource
        /// </summary>
        [Fact]
        public void ResourceServiceUpdateResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resourceName = null;
            //ResourceServiceUpdateResourceRequest resource = null;
            //var response = instance.ResourceServiceUpdateResource(resourceName, resource);
            //Assert.IsType<V1Resource>(response);
        }
    }
}
