/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing IdentityProviderServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IdentityProviderServiceApiTests : IDisposable
    {
        private IdentityProviderServiceApi instance;

        public IdentityProviderServiceApiTests()
        {
            instance = new IdentityProviderServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IdentityProviderServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IdentityProviderServiceApi
            //Assert.IsType<IdentityProviderServiceApi>(instance);
        }

        /// <summary>
        /// Test IdentityProviderServiceCreateIdentityProvider
        /// </summary>
        [Fact]
        public void IdentityProviderServiceCreateIdentityProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Apiv1IdentityProvider identityProvider = null;
            //var response = instance.IdentityProviderServiceCreateIdentityProvider(identityProvider);
            //Assert.IsType<Apiv1IdentityProvider>(response);
        }

        /// <summary>
        /// Test IdentityProviderServiceDeleteIdentityProvider
        /// </summary>
        [Fact]
        public void IdentityProviderServiceDeleteIdentityProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name1 = null;
            //var response = instance.IdentityProviderServiceDeleteIdentityProvider(name1);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test IdentityProviderServiceGetIdentityProvider
        /// </summary>
        [Fact]
        public void IdentityProviderServiceGetIdentityProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name1 = null;
            //var response = instance.IdentityProviderServiceGetIdentityProvider(name1);
            //Assert.IsType<Apiv1IdentityProvider>(response);
        }

        /// <summary>
        /// Test IdentityProviderServiceListIdentityProviders
        /// </summary>
        [Fact]
        public void IdentityProviderServiceListIdentityProvidersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IdentityProviderServiceListIdentityProviders();
            //Assert.IsType<V1ListIdentityProvidersResponse>(response);
        }

        /// <summary>
        /// Test IdentityProviderServiceUpdateIdentityProvider
        /// </summary>
        [Fact]
        public void IdentityProviderServiceUpdateIdentityProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string identityProviderName = null;
            //TheIdentityProviderToUpdate identityProvider = null;
            //var response = instance.IdentityProviderServiceUpdateIdentityProvider(identityProviderName, identityProvider);
            //Assert.IsType<Apiv1IdentityProvider>(response);
        }
    }
}
